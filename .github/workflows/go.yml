name: Go

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ windows, linux, darwin ]
        goarch: [ amd64 ]
#        include:
#          - goos: darwin
#            goarch: arm64
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.1

    - name: Test
      if: matrix.goos == 'linux'
      run: go test -v ./...

    - name: Build
      run: go build -trimpath -ldflags '-extldflags "-static" -s -w -buildid=' -v -o out/cos-uploader-${{ matrix.goos }}-${{ matrix.goarch }} .

    - name: Rename for Windows
      if: matrix.goos == 'windows'
      run: mv out/cos-uploader-${{ matrix.goos }}-${{ matrix.goarch }} out/cos-uploader-${{ matrix.goos }}-${{ matrix.goarch }}.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cos-uploader-${{ matrix.goos }}-${{ matrix.goarch }}
        path: out/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: cos-uploader-linux-amd64
      - uses: actions/download-artifact@v3
        with:
          name: cos-uploader-windows-amd64
      - uses: actions/download-artifact@v3
        with:
          name: cos-uploader-darwin-amd64
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            cos-uploader-linux-amd64
            cos-uploader-windows-amd64.exe
            cos-uploader-darwin-amd64
          draft: true
